services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - minio_vds
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
    networks:
      - dev

  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dev

  frontend:
    build:
      context: ./frontend
    networks:
      - dev

  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=postgres pg_isready --username=postgres --dbname=communify"]
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - dev

  minio_vds:
    image: minio/minio
    container_name: minio_vds
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # MinIO Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_PROMETHEUS_AUTH_TYPE: "public"

      TARGET_BUCKET_NAME: communify-images
    command: server /data --address ":9000" --console-address ":9001"
    healthcheck:

      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - dev

  setup-minio:
    image: minio/mc # Рекомендуется использовать конкретную версию mc
    depends_on:
      minio_vds:
        condition: service_healthy # Ждем, пока MinIO станет здоровым
    environment:
      # Передаем учетные данные администратора и имя бакета
      MC_HOST_myminio: http://minioadmin:minioadmin@minio_vds:9000 # !!! ИСПОЛЬЗУЙТЕ ТОТ ЖЕ ПАРОЛЬ, ЧТО И ВЫШЕ !!!
      TARGET_BUCKET_NAME: communify-images # То же имя бакета, что и выше
    entrypoint: >
      /bin/sh -c "
      echo 'Ожидание готовности MinIO...';
      sleep 5;
      echo 'Проверка/создание бакета communify-images...';
      mc mb myminio/communify-images --ignore-existing;

      echo 'Установка политики download (публичный доступ на чтение) для бакета communify-images...';
      mc anonymous set download myminio/communify-images;

      echo 'Настройка MinIO завершена. Бакет communify-images теперь публично доступен для чтения.';
      "
    networks:
      - dev

networks:
  dev:

volumes:
  postgres_data:
  minio_data: