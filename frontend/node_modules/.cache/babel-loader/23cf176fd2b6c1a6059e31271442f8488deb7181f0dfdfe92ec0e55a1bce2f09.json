{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport MainLeftSideBar from '../../component/MainLeftSideBar/MainLeftSideBar';\nimport PostContainer from '../../component/PostContainer/PostContainer';\nimport MainRightSideBar from '../../component/MainRightSideBar/MainRightSideBar';\nimport classes from './Main.module.css'; // CSS\nimport { ROUTE } from '../../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    postStore,\n    friendStore,\n    groupStore\n  } = useContext(Context); // Добавил friendStore, groupStore\n  const location = useLocation();\n  useEffect(() => {\n    if (friendStore.recommendedFriends.length === 0) {\n      friendStore.fetchRecommendedFriends();\n    }\n    if (groupStore.recommendedGroups.length === 0) {\n      groupStore.fetchRecommendedGroups();\n    }\n\n    // Загрузка постов в зависимости от пути\n    if (location.pathname === ROUTE.RECOMMENDATIONS) {\n      postStore.fetchRecommendedPosts();\n    } else {\n      // По умолчанию /feed\n      postStore.fetchFeedPosts();\n    }\n  }, [location.pathname, postStore, friendStore, groupStore]);\n  const getPosts = () => {\n    switch (location.pathname) {\n      case ROUTE.RECOMMENDATIONS:\n        return postStore.recommendedPosts;\n      case ROUTE.FEED:\n      default:\n        return postStore.feedPosts;\n    }\n  };\n  const posts = getPosts();\n  if (postStore.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 74\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 35\n  }, this);\n  // if (postStore.error) return <div className={classes.mainContainer}><div className={classes.container}><p>Error: {postStore.error}</p></div></div>;\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(MainLeftSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(PostContainer, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainRightSideBar, {\n      possibleFriends: friendStore.recommendedFriends,\n      interestingGroups: groupStore.recommendedGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}, \"wgBer0pa2yH3y50AaFXfZ9ZJ6Wk=\", false, function () {\n  return [useLocation];\n})), \"wgBer0pa2yH3y50AaFXfZ9ZJ6Wk=\", false, function () {\n  return [useLocation];\n});\n_c2 = Main;\nexport default Main;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main$observer\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"names":["React","useContext","useEffect","useLocation","observer","Context","MainLeftSideBar","PostContainer","MainRightSideBar","classes","ROUTE","jsxDEV","_jsxDEV","Main","_s","_c","postStore","friendStore","groupStore","location","recommendedFriends","length","fetchRecommendedFriends","recommendedGroups","fetchRecommendedGroups","pathname","RECOMMENDATIONS","fetchRecommendedPosts","fetchFeedPosts","getPosts","recommendedPosts","FEED","feedPosts","posts","loading","className","mainContainer","children","container","fileName","_jsxFileName","lineNumber","columnNumber","possibleFriends","interestingGroups","_c2","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport MainLeftSideBar from '../../component/MainLeftSideBar/MainLeftSideBar';\nimport PostContainer from '../../component/PostContainer/PostContainer';\nimport MainRightSideBar from '../../component/MainRightSideBar/MainRightSideBar';\nimport classes from './Main.module.css'; // CSS\nimport { ROUTE } from '../../utils/consts';\n\n\nconst Main = observer(() => {\n    const { postStore, friendStore, groupStore } = useContext(Context); // Добавил friendStore, groupStore\n    const location = useLocation();\n\n    useEffect(() => {\n        if (friendStore.recommendedFriends.length === 0) {\n            friendStore.fetchRecommendedFriends();\n        }\n        if (groupStore.recommendedGroups.length === 0) {\n            groupStore.fetchRecommendedGroups();\n        }\n\n        // Загрузка постов в зависимости от пути\n        if (location.pathname === ROUTE.RECOMMENDATIONS) {\n            postStore.fetchRecommendedPosts();\n        } else { // По умолчанию /feed\n            postStore.fetchFeedPosts();\n        }\n    }, [location.pathname, postStore, friendStore, groupStore]);\n\n    const getPosts = () => {\n        switch(location.pathname) {\n            case ROUTE.RECOMMENDATIONS:\n                return postStore.recommendedPosts;\n            case ROUTE.FEED:\n            default:\n                return postStore.feedPosts;\n        }\n    };\n\n    const posts = getPosts();\n\n    if (postStore.loading) return <div className={classes.mainContainer}><div className={classes.container}>Loading posts...</div></div>;\n    // if (postStore.error) return <div className={classes.mainContainer}><div className={classes.container}><p>Error: {postStore.error}</p></div></div>;\n\n\n    return (\n        <main className={classes.mainContainer}>\n            <MainLeftSideBar />\n            <div className={classes.container}>\n                {/* Возможно, кнопка \"Создать пост\" здесь */}\n                {/* <Link to={ROUTE.POST_CREATE}><Button>Create New Post</Button></Link> */}\n                <PostContainer posts={posts} />\n            </div>\n            <MainRightSideBar \n                possibleFriends={friendStore.recommendedFriends} \n                interestingGroups={groupStore.recommendedGroups}\n            />\n        </main>\n    );\n});\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}