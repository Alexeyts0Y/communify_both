{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Friends/Friends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from 'react';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport FriendItem from '../../component/FriendItem/FriendItem'; // Проверьте путь\nimport classes from './Friends.module.css'; // Создайте CSS\nimport { ROUTE } from '../../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    friendStore,\n    userStore\n  } = useContext(Context);\n  const location = useLocation();\n  const {\n    id: userIdParam\n  } = useParams(); // Для /users/{id}/friends\n\n  const getPageTypeAndTitle = () => {\n    if (userIdParam && Number(userIdParam) !== userStore.userId) return {\n      type: 'userFriends',\n      title: `Friends of User ${userIdParam}`\n    };\n    if (location.pathname.endsWith(ROUTE.FRIENDS_SENT)) return {\n      type: 'sentRequests',\n      title: 'Sent Friend Requests'\n    };\n    if (location.pathname.endsWith(ROUTE.FRIENDS_RECEIVED)) return {\n      type: 'receivedRequests',\n      title: 'Received Friend Requests'\n    };\n    return {\n      type: 'myFriends',\n      title: 'My Friends'\n    };\n  };\n  const {\n    type: pageType,\n    title\n  } = getPageTypeAndTitle();\n  useEffect(() => {\n    switch (pageType) {\n      case 'myFriends':\n        friendStore.fetchMyFriends();\n        break;\n      case 'sentRequests':\n        friendStore.fetchSentRequests();\n        break;\n      case 'receivedRequests':\n        friendStore.fetchReceivedRequests();\n        break;\n      case 'userFriends':\n        if (userIdParam) friendStore.fetchUserFriends(Number(userIdParam));\n        break;\n      default:\n        break;\n    }\n  }, [pageType, userIdParam, friendStore, userStore.userId]); // Добавил userStore.userId для реакции на логин/разлогин\n\n  const handleAction = (action, entityId, userIdInItem = null) => {\n    // entityId может быть requestId или friendId\n    switch (action) {\n      case 'remove':\n        // entityId это friendId (ID пользователя)\n        friendStore.removeFriend(entityId);\n        break;\n      case 'cancel':\n        // entityId это requestId (ID записи FriendResponseDto)\n        friendStore.cancelSentRequest(entityId);\n        break;\n      case 'accept':\n        // entityId это requestId\n        friendStore.acceptFriendRequest(entityId);\n        break;\n      case 'reject':\n        // entityId это requestId\n        friendStore.rejectFriendRequest(entityId);\n        break;\n      default:\n        console.warn(\"Unknown action:\", action);\n    }\n  };\n  const getUsersToDisplay = () => {\n    switch (pageType) {\n      case 'myFriends':\n        return friendStore.myFriends.map(friend => ({\n          ...friend,\n          id: friend.id,\n          type: 'friend'\n        }));\n      // UserMinimalDto\n      case 'sentRequests':\n        // FriendResponseDto: user - это я, friend - кому отправил. Нужен friend.\n        return friendStore.sentRequests.map(req => ({\n          ...req.friend,\n          requestId: req.id,\n          type: 'sent'\n        }));\n      case 'receivedRequests':\n        // FriendResponseDto: user - кто отправил, friend - это я. Нужен user.\n        return friendStore.receivedRequests.map(req => ({\n          ...req.user,\n          requestId: req.id,\n          type: 'received'\n        }));\n      case 'userFriends':\n        return friendStore.userFriends.map(friend => ({\n          ...friend,\n          id: friend.id,\n          type: 'friendOfUser'\n        }));\n      default:\n        return [];\n    }\n  };\n  const users = getUsersToDisplay();\n  if (friendStore.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 114\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 37\n  }, this);\n  if (friendStore.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", friendStore.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 112\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), (!userIdParam || Number(userIdParam) === userStore.userId) && /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.friendsNav,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: ROUTE.FRIENDS_MY,\n        className: pageType === 'myFriends' ? classes.activeLink : '',\n        children: \"My Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: ROUTE.FRIENDS_RECEIVED,\n        className: pageType === 'receivedRequests' ? classes.activeLink : '',\n        children: [\"Received Requests (\", friendStore.receivedRequests.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: ROUTE.FRIENDS_SENT,\n        className: pageType === 'sentRequests' ? classes.activeLink : '',\n        children: [\"Sent Requests (\", friendStore.sentRequests.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 18\n    }, this), users.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users to display in this category.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.usersList,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(FriendItem, {\n        // Уникальный ключ\n        user: user // Это UserMinimalDto + requestId если есть\n        // pageType для FriendItem должен быть 'friends', 'sentRequests', 'receivedRequests'\n        // Для 'userFriends' кнопки не показываем, или показываем \"Добавить в друзья\", если не друг\n        ,\n        pageType: user.type === 'friend' ? 'friends' : user.type === 'sent' ? 'sentRequests' : user.type === 'received' ? 'receivedRequests' : 'viewOnly' // Для друзей другого пользователя\n        ,\n        onAction: actionName => handleAction(actionName, user.type === 'friend' ? user.id : user.requestId, user.id)\n      }, user.requestId || user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}, \"UTzA4B5vBVvrHOZzAmx8g5PwUoc=\", false, function () {\n  return [useLocation, useParams];\n})), \"UTzA4B5vBVvrHOZzAmx8g5PwUoc=\", false, function () {\n  return [useLocation, useParams];\n});\n_c2 = Friends;\nexport default Friends;\nvar _c, _c2;\n$RefreshReg$(_c, \"Friends$observer\");\n$RefreshReg$(_c2, \"Friends\");","map":{"version":3,"names":["React","useEffect","useContext","useLocation","useParams","Link","observer","Context","FriendItem","classes","ROUTE","jsxDEV","_jsxDEV","Friends","_s","_c","friendStore","userStore","location","id","userIdParam","getPageTypeAndTitle","Number","userId","type","title","pathname","endsWith","FRIENDS_SENT","FRIENDS_RECEIVED","pageType","fetchMyFriends","fetchSentRequests","fetchReceivedRequests","fetchUserFriends","handleAction","action","entityId","userIdInItem","removeFriend","cancelSentRequest","acceptFriendRequest","rejectFriendRequest","console","warn","getUsersToDisplay","myFriends","map","friend","sentRequests","req","requestId","receivedRequests","user","userFriends","users","loading","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","error","friendsNav","to","FRIENDS_MY","activeLink","length","usersList","onAction","actionName","_c2","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Friends/Friends.jsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport FriendItem from '../../component/FriendItem/FriendItem'; // Проверьте путь\nimport classes from './Friends.module.css'; // Создайте CSS\nimport { ROUTE } from '../../utils/consts';\n\n\nconst Friends = observer(() => {\n    const { friendStore, userStore } = useContext(Context);\n    const location = useLocation();\n    const { id: userIdParam } = useParams(); // Для /users/{id}/friends\n\n    const getPageTypeAndTitle = () => {\n        if (userIdParam && Number(userIdParam) !== userStore.userId) return { type: 'userFriends', title: `Friends of User ${userIdParam}` };\n        if (location.pathname.endsWith(ROUTE.FRIENDS_SENT)) return { type: 'sentRequests', title: 'Sent Friend Requests' };\n        if (location.pathname.endsWith(ROUTE.FRIENDS_RECEIVED)) return { type: 'receivedRequests', title: 'Received Friend Requests' };\n        return { type: 'myFriends', title: 'My Friends' };\n    };\n    \n    const { type: pageType, title } = getPageTypeAndTitle();\n    \n    useEffect(() => {\n        switch(pageType) {\n            case 'myFriends':\n                friendStore.fetchMyFriends();\n                break;\n            case 'sentRequests':\n                friendStore.fetchSentRequests();\n                break;\n            case 'receivedRequests':\n                friendStore.fetchReceivedRequests();\n                break;\n            case 'userFriends':\n                if (userIdParam) friendStore.fetchUserFriends(Number(userIdParam));\n                break;\n            default:\n                break;\n        }\n    }, [pageType, userIdParam, friendStore, userStore.userId]); // Добавил userStore.userId для реакции на логин/разлогин\n    \n    const handleAction = (action, entityId, userIdInItem = null) => { // entityId может быть requestId или friendId\n        switch(action) {\n            case 'remove': // entityId это friendId (ID пользователя)\n                friendStore.removeFriend(entityId);\n                break;\n            case 'cancel': // entityId это requestId (ID записи FriendResponseDto)\n                friendStore.cancelSentRequest(entityId);\n                break;\n            case 'accept': // entityId это requestId\n                friendStore.acceptFriendRequest(entityId);\n                break;\n            case 'reject': // entityId это requestId\n                friendStore.rejectFriendRequest(entityId);\n                break;\n            default:\n                console.warn(\"Unknown action:\", action);\n        }\n    };\n    \n    const getUsersToDisplay = () => {\n        switch(pageType) {\n            case 'myFriends': \n                return friendStore.myFriends.map(friend => ({...friend, id: friend.id, type: 'friend'})); // UserMinimalDto\n            case 'sentRequests': \n                // FriendResponseDto: user - это я, friend - кому отправил. Нужен friend.\n                return friendStore.sentRequests.map(req => ({...req.friend, requestId: req.id, type: 'sent'}));\n            case 'receivedRequests': \n                // FriendResponseDto: user - кто отправил, friend - это я. Нужен user.\n                return friendStore.receivedRequests.map(req => ({...req.user, requestId: req.id, type: 'received'}));\n            case 'userFriends': \n                return friendStore.userFriends.map(friend => ({...friend, id: friend.id, type: 'friendOfUser'}));\n            default: return [];\n        }\n    };\n    \n    const users = getUsersToDisplay();\n    \n    if (friendStore.loading) return <div className={classes.container}><h1 className={classes.title}>{title}</h1><div>Loading...</div></div>;\n    if (friendStore.error) return <div className={classes.container}><h1 className={classes.title}>{title}</h1><p>Error: {friendStore.error}</p></div>;\n\n    return (\n        <div className={classes.container}>\n            <h1 className={classes.title}>{title}</h1>\n            \n            {/* Навигация для друзей */}\n            {(!userIdParam || Number(userIdParam) === userStore.userId) && (\n                 <nav className={classes.friendsNav}>\n                    <Link to={ROUTE.FRIENDS_MY} className={pageType === 'myFriends' ? classes.activeLink : ''}>My Friends</Link>\n                    <Link to={ROUTE.FRIENDS_RECEIVED} className={pageType === 'receivedRequests' ? classes.activeLink : ''}>Received Requests ({friendStore.receivedRequests.length})</Link>\n                    <Link to={ROUTE.FRIENDS_SENT} className={pageType === 'sentRequests' ? classes.activeLink : ''}>Sent Requests ({friendStore.sentRequests.length})</Link>\n                 </nav>\n            )}\n            \n            {users.length === 0 && <p>No users to display in this category.</p>}\n            <div className={classes.usersList}>\n                {users.map(user => (\n                    <FriendItem \n                        key={user.requestId || user.id} // Уникальный ключ\n                        user={user} // Это UserMinimalDto + requestId если есть\n                        // pageType для FriendItem должен быть 'friends', 'sentRequests', 'receivedRequests'\n                        // Для 'userFriends' кнопки не показываем, или показываем \"Добавить в друзья\", если не друг\n                        pageType={\n                            user.type === 'friend' ? 'friends' :\n                            user.type === 'sent' ? 'sentRequests' :\n                            user.type === 'received' ? 'receivedRequests' :\n                            'viewOnly' // Для друзей другого пользователя\n                        }\n                        onAction={(actionName) => handleAction(actionName, user.type === 'friend' ? user.id : user.requestId, user.id)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n});\n\nexport default Friends"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}