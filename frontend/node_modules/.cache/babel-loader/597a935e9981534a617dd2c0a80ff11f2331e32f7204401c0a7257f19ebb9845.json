{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Friends/Friends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Context } from '../..';\nimport classes from './FriendsPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const {\n    friendStorage\n  } = useContext(Context);\n  const location = useLocation();\n  const {\n    id\n  } = useParams(); // Для /users/{id}/friends\n\n  // Определяем тип страницы\n  const getPageType = () => {\n    if (id) return 'userFriends'; // Просмотр друзей другого пользователя\n    if (location.pathname.includes('requests/sent')) return 'sentRequests';\n    if (location.pathname.includes('requests/received')) return 'receivedRequests';\n    return 'friends'; // По умолчанию - мои друзья\n  };\n  const pageType = getPageType();\n\n  // Загрузка данных при изменении типа страницы или id пользователя\n  useEffect(() => {\n    switch (pageType) {\n      case 'friends':\n        friendStorage.fetchMyFriends();\n        break;\n      case 'sentRequests':\n        friendStorage.fetchSentRequests();\n        break;\n      case 'receivedRequests':\n        friendStorage.fetchReceivedRequests();\n        break;\n      case 'userFriends':\n        friendStorage.fetchUserFriends(id);\n        break;\n    }\n  }, [pageType, id]);\n\n  // Обработчики действий\n  const handleAction = (action, friendId) => {\n    switch (action) {\n      case 'remove':\n        friendStorage.removeFriend(friendId);\n        break;\n      case 'cancel':\n        friendStorage.cancelRequest(friendId);\n        break;\n      case 'accept':\n        friendStorage.acceptRequest(friendId);\n        break;\n      case 'reject':\n        friendStorage.rejectRequest(friendId);\n        break;\n    }\n  };\n\n  // Получаем нужный список пользователей\n  const getUsers = () => {\n    switch (pageType) {\n      case 'friends':\n        return friendStorage.myFriends;\n      case 'sentRequests':\n        return friendStorage.sentRequests;\n      case 'receivedRequests':\n        return friendStorage.receivedRequests;\n      case 'userFriends':\n        return friendStorage.userFriends;\n      default:\n        return [];\n    }\n  };\n  const users = getUsers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: [pageType === 'friends' && 'Мои друзья', pageType === 'sentRequests' && 'Отправленные заявки', pageType === 'receivedRequests' && 'Полученные заявки', pageType === 'userFriends' && `Друзья пользователя`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.usersList,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(FriendItem, {\n        user: user,\n        pageType: pageType,\n        onAction: handleAction\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Friends, \"jm4KG/HmVo0T2/Mka01gOIw30q8=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = Friends;\nconst FriendItem = ({\n  user,\n  pageType,\n  onAction\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.userCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.userInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatarUrl || '/default-avatar.png',\n        alt: \"avatar\",\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [user.firstName, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.mutualFriendsCount > 0 && `Общих друзей: ${user.mutualFriendsCount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), pageType === 'friends' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.actionButton,\n      onClick: () => onAction('remove', user.id),\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), pageType === 'sentRequests' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.actionButton,\n      onClick: () => onAction('cancel', user.id),\n      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), pageType === 'receivedRequests' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.requestActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${classes.actionButton} ${classes.acceptButton}`,\n        onClick: () => onAction('accept', user.id),\n        children: \"\\u041F\\u0440\\u0438\\u043D\\u044F\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${classes.actionButton} ${classes.rejectButton}`,\n        onClick: () => onAction('reject', user.id),\n        children: \"\\u041E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_c2 = FriendItem;\nexport default Friends;\nvar _c, _c2;\n$RefreshReg$(_c, \"Friends\");\n$RefreshReg$(_c2, \"FriendItem\");","map":{"version":3,"names":["React","useContext","useEffect","useLocation","useParams","Context","classes","jsxDEV","_jsxDEV","Friends","_s","friendStorage","location","id","getPageType","pathname","includes","pageType","fetchMyFriends","fetchSentRequests","fetchReceivedRequests","fetchUserFriends","handleAction","action","friendId","removeFriend","cancelRequest","acceptRequest","rejectRequest","getUsers","myFriends","sentRequests","receivedRequests","userFriends","users","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","usersList","map","user","FriendItem","onAction","_c","userCard","userInfo","src","avatarUrl","alt","avatar","firstName","lastName","mutualFriendsCount","actionButton","onClick","requestActions","acceptButton","rejectButton","_c2","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Friends/Friends.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Context } from '../..';\nimport classes from './FriendsPage.module.css';\n\nconst Friends = () => {\n    const { friendStorage } = useContext(Context);\n    const location = useLocation();\n    const { id } = useParams(); // Для /users/{id}/friends\n    \n    // Определяем тип страницы\n    const getPageType = () => {\n        if (id) return 'userFriends'; // Просмотр друзей другого пользователя\n        if (location.pathname.includes('requests/sent')) return 'sentRequests';\n        if (location.pathname.includes('requests/received')) return 'receivedRequests';\n        return 'friends'; // По умолчанию - мои друзья\n    };\n    \n    const pageType = getPageType();\n    \n    // Загрузка данных при изменении типа страницы или id пользователя\n    useEffect(() => {\n        switch(pageType) {\n            case 'friends':\n                friendStorage.fetchMyFriends();\n                break;\n            case 'sentRequests':\n                friendStorage.fetchSentRequests();\n                break;\n            case 'receivedRequests':\n                friendStorage.fetchReceivedRequests();\n                break;\n            case 'userFriends':\n                friendStorage.fetchUserFriends(id);\n                break;\n        }\n    }, [pageType, id]);\n    \n    // Обработчики действий\n    const handleAction = (action, friendId) => {\n        switch(action) {\n            case 'remove':\n                friendStorage.removeFriend(friendId);\n                break;\n            case 'cancel':\n                friendStorage.cancelRequest(friendId);\n                break;\n            case 'accept':\n                friendStorage.acceptRequest(friendId);\n                break;\n            case 'reject':\n                friendStorage.rejectRequest(friendId);\n                break;\n        }\n    };\n    \n    // Получаем нужный список пользователей\n    const getUsers = () => {\n        switch(pageType) {\n            case 'friends': return friendStorage.myFriends;\n            case 'sentRequests': return friendStorage.sentRequests;\n            case 'receivedRequests': return friendStorage.receivedRequests;\n            case 'userFriends': return friendStorage.userFriends;\n            default: return [];\n        }\n    };\n    \n    const users = getUsers();\n    \n    return (\n        <div className={classes.container}>\n            <h1 className={classes.title}>\n                {pageType === 'friends' && 'Мои друзья'}\n                {pageType === 'sentRequests' && 'Отправленные заявки'}\n                {pageType === 'receivedRequests' && 'Полученные заявки'}\n                {pageType === 'userFriends' && `Друзья пользователя`}\n            </h1>\n            \n            <div className={classes.usersList}>\n                {users.map(user => (\n                    <FriendItem \n                        key={user.id}\n                        user={user}\n                        pageType={pageType}\n                        onAction={handleAction}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nconst FriendItem = ({ user, pageType, onAction }) => {\n    return (\n        <div className={classes.userCard}>\n            <div className={classes.userInfo}>\n                <img \n                    src={user.avatarUrl || '/default-avatar.png'} \n                    alt=\"avatar\"\n                    className={classes.avatar}\n                />\n                <div>\n                    <h3>{user.firstName} {user.lastName}</h3>\n                    <p>{user.mutualFriendsCount > 0 && \n                        `Общих друзей: ${user.mutualFriendsCount}`}\n                    </p>\n                </div>\n            </div>\n            \n            {/* Кнопки действий в зависимости от типа страницы */}\n            {pageType === 'friends' && (\n                <button \n                    className={classes.actionButton}\n                    onClick={() => onAction('remove', user.id)}\n                >\n                    Удалить\n                </button>\n            )}\n            \n            {pageType === 'sentRequests' && (\n                <button \n                    className={classes.actionButton}\n                    onClick={() => onAction('cancel', user.id)}\n                >\n                    Отменить\n                </button>\n            )}\n            \n            {pageType === 'receivedRequests' && (\n                <div className={classes.requestActions}>\n                    <button \n                        className={`${classes.actionButton} ${classes.acceptButton}`}\n                        onClick={() => onAction('accept', user.id)}\n                    >\n                        Принять\n                    </button>\n                    <button \n                        className={`${classes.actionButton} ${classes.rejectButton}`}\n                        onClick={() => onAction('reject', user.id)}\n                    >\n                        Отклонить\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Friends;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}