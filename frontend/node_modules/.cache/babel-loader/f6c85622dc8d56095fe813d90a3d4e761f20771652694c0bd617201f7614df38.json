{"ast":null,"code":"import $api from \"../http\";\nexport const AuthAPI = {\n  login: async (username, password) => {\n    const response = await $api.post('/auth/login', {\n      username,\n      password\n    });\n    return response.data; // Ожидаем { token: \"...\" }\n  },\n  register: async userData => {\n    // userData: { username, email, firstName, lastName, password }\n    const response = await $api.post('/auth/register', userData);\n    return response.data; // Ожидаем { token: \"...\" } или данные пользователя\n  },\n  changePassword: async (userId, oldPassword, newPassword) => {\n    // Backend должен иметь эндпоинт для смены пароля, например /users/{userId}/change-password\n    // или /auth/change-password, если userId берется из токена\n    // Пока предположим, что userId нужен в пути и старый/новый пароль в теле\n    const response = await $api.post(`/users/${userId}/change-password`, {\n      oldPassword,\n      newPassword\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["$api","AuthAPI","login","username","password","response","post","data","register","userData","changePassword","userId","oldPassword","newPassword"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/api/authApi.js"],"sourcesContent":["import $api from \"../http\";\n\nexport const AuthAPI = {\n    login: async (username, password) => {\n        const response = await $api.post('/auth/login', { username, password });\n        return response.data; // Ожидаем { token: \"...\" }\n    },\n\n    register: async (userData) => { // userData: { username, email, firstName, lastName, password }\n        const response = await $api.post('/auth/register', userData);\n        return response.data; // Ожидаем { token: \"...\" } или данные пользователя\n    },\n\n    changePassword: async (userId, oldPassword, newPassword) => {\n        // Backend должен иметь эндпоинт для смены пароля, например /users/{userId}/change-password\n        // или /auth/change-password, если userId берется из токена\n        // Пока предположим, что userId нужен в пути и старый/новый пароль в теле\n        const response = await $api.post(`/users/${userId}/change-password`, { oldPassword, newPassword });\n        return response.data;\n    }\n};"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,OAAO,GAAG;EACnBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,MAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,aAAa,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAAE;IAC5B,MAAMJ,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC5D,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDG,cAAc,EAAE,MAAAA,CAAOC,MAAM,EAAEC,WAAW,EAAEC,WAAW,KAAK;IACxD;IACA;IACA;IACA,MAAMR,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,UAAUK,MAAM,kBAAkB,EAAE;MAAEC,WAAW;MAAEC;IAAY,CAAC,CAAC;IAClG,OAAOR,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}