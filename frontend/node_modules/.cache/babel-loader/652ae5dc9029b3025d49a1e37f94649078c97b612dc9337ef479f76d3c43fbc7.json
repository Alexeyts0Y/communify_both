{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/component/ProfilePageSideBar/ProfilePageSideBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport classes from './ProfilePageSideBar.module.css';\nimport { ROUTE } from '../../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePageSideBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    friendStore,\n    userStore\n  } = useContext(Context); // Removed groupStore if not used for fetching\n  const {\n    id: profileIdFromParams\n  } = useParams();\n  const isMyProfile = !profileIdFromParams || userStore.user && userStore.user.id === Number(profileIdFromParams);\n  const targetUserId = isMyProfile ? userStore.userId : Number(profileIdFromParams);\n  useEffect(() => {\n    if (targetUserId) {\n      // Fetch friends for the displayed profile\n      if (isMyProfile) {\n        friendStore.fetchMyFriends();\n      } else {\n        friendStore.fetchUserFriends(targetUserId);\n      }\n      // Groups are now expected to be part of userStore.user or userStore.currentProfile\n      // So, no separate fetch for groups is needed here if Profile.js ensures data is loaded.\n      // The commented out groupStore.fetchUserGroups was correct to be removed.\n    }\n  }, [targetUserId, isMyProfile, friendStore]); // Removed groupStore from dependencies\n\n  // profileData will be userStore.user or userStore.currentProfile,\n  // which should now contain 'groups' after Profile.js loads the data.\n  const profileData = isMyProfile ? userStore.user : userStore.currentProfile;\n  const friends = isMyProfile ? friendStore.myFriends : friendStore.userFriends;\n  // Groups are taken directly from the profileData object\n  const groups = (profileData === null || profileData === void 0 ? void 0 : profileData.groups) || [];\n  const friendsLimit = 6;\n  const groupsLimit = 6;\n\n  // Added a check for profileData to prevent errors if it's temporarily null\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainContainer,\n      children: \"Loading sidebar data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: [\"Friends (\", friends.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.items,\n        children: friends.length > 0 ? friends.slice(0, friendsLimit).map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.item,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.avatarContainer,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/users/${friend.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: friend.avatarUrl || '/default-avatar.png',\n                alt: \"avatar\",\n                className: classes.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.linkContainer,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/users/${friend.id}`,\n              className: classes.link,\n              children: `${friend.firstName} ${friend.lastName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, `friend-${friend.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No friends to show.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), friends.length > friendsLimit && /*#__PURE__*/_jsxDEV(Link, {\n        to: isMyProfile ? ROUTE.FRIENDS_MY : `/users/${targetUserId}/friends`,\n        className: classes.seeAllLink,\n        children: \"See all friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: [\"Groups (\", groups.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.items,\n        children: groups.length > 0 ? groups.slice(0, groupsLimit).map(userGroup =>\n        // Ensure userGroup and userGroup.group exist before accessing nested properties\n        userGroup && userGroup.group && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.item,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.avatarContainer,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/groups/${userGroup.group.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userGroup.group.imageUrl || '/default-group-avatar.png',\n                alt: \"group avatar\",\n                className: classes.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.linkContainer,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/groups/${userGroup.group.id}`,\n              className: classes.link,\n              children: userGroup.group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.roleInGroup,\n              children: userGroup.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, `group-${userGroup.group.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not a member of any group.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}, \"czwPLvhl7nUEVQ5V2UFHYNnQV3c=\", false, function () {\n  return [useParams];\n})), \"czwPLvhl7nUEVQ5V2UFHYNnQV3c=\", false, function () {\n  return [useParams];\n});\n_c2 = ProfilePageSideBar;\nexport default ProfilePageSideBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProfilePageSideBar$observer\");\n$RefreshReg$(_c2, \"ProfilePageSideBar\");","map":{"version":3,"names":["React","useContext","useEffect","Link","useParams","observer","Context","classes","ROUTE","jsxDEV","_jsxDEV","ProfilePageSideBar","_s","_c","friendStore","userStore","id","profileIdFromParams","isMyProfile","user","Number","targetUserId","userId","fetchMyFriends","fetchUserFriends","profileData","currentProfile","friends","myFriends","userFriends","groups","friendsLimit","groupsLimit","className","mainContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","container","title","length","items","slice","map","friend","item","avatarContainer","to","src","avatarUrl","alt","avatar","linkContainer","link","firstName","lastName","FRIENDS_MY","seeAllLink","userGroup","group","imageUrl","name","roleInGroup","role","_c2","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/component/ProfilePageSideBar/ProfilePageSideBar.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport classes from './ProfilePageSideBar.module.css';\nimport { ROUTE } from '../../utils/consts';\n\nconst ProfilePageSideBar = observer(() => {\n    const { friendStore, userStore } = useContext(Context); // Removed groupStore if not used for fetching\n    const { id: profileIdFromParams } = useParams();\n\n    const isMyProfile = !profileIdFromParams || (userStore.user && userStore.user.id === Number(profileIdFromParams));\n    const targetUserId = isMyProfile ? userStore.userId : Number(profileIdFromParams);\n\n    useEffect(() => {\n        if (targetUserId) {\n            // Fetch friends for the displayed profile\n            if (isMyProfile) {\n                friendStore.fetchMyFriends();\n            } else {\n                friendStore.fetchUserFriends(targetUserId);\n            }\n            // Groups are now expected to be part of userStore.user or userStore.currentProfile\n            // So, no separate fetch for groups is needed here if Profile.js ensures data is loaded.\n            // The commented out groupStore.fetchUserGroups was correct to be removed.\n        }\n    }, [targetUserId, isMyProfile, friendStore]); // Removed groupStore from dependencies\n\n    // profileData will be userStore.user or userStore.currentProfile,\n    // which should now contain 'groups' after Profile.js loads the data.\n    const profileData = isMyProfile ? userStore.user : userStore.currentProfile;\n    \n    const friends = isMyProfile ? friendStore.myFriends : friendStore.userFriends;\n    // Groups are taken directly from the profileData object\n    const groups = profileData?.groups || [];\n\n    const friendsLimit = 6;\n    const groupsLimit = 6;\n\n    // Added a check for profileData to prevent errors if it's temporarily null\n    if (!profileData) {\n        return <div className={classes.mainContainer}>Loading sidebar data...</div>;\n    }\n\n    return (\n        <div className={classes.mainContainer}>\n            <div className={classes.container}>\n                <h2 className={classes.title}>Friends ({friends.length})</h2>\n                <div className={classes.items}>\n                    {friends.length > 0 ? friends.slice(0, friendsLimit).map((friend) => (\n                        <div className={classes.item} key={`friend-${friend.id}`}>\n                            <div className={classes.avatarContainer}>\n                                <Link to={`/users/${friend.id}`}>\n                                    <img src={friend.avatarUrl || '/default-avatar.png'} alt=\"avatar\" className={classes.avatar}/>\n                                </Link>\n                            </div>\n                            <div className={classes.linkContainer}>\n                                <Link to={`/users/${friend.id}`} className={classes.link}>\n                                    {`${friend.firstName} ${friend.lastName}`}\n                                </Link>\n                            </div>\n                        </div>\n                    )) : (<div>No friends to show.</div>)}\n                </div>\n                {friends.length > friendsLimit && (\n                    <Link to={isMyProfile ? ROUTE.FRIENDS_MY : `/users/${targetUserId}/friends`} className={classes.seeAllLink}>\n                        See all friends\n                    </Link>\n                )}\n            </div>\n\n            <div className={classes.container}>\n                <h2 className={classes.title}>Groups ({groups.length})</h2>\n                <div className={classes.items}>\n                    {groups.length > 0 ? groups.slice(0, groupsLimit).map((userGroup) => (\n                        // Ensure userGroup and userGroup.group exist before accessing nested properties\n                        userGroup && userGroup.group && (\n                            <div className={classes.item} key={`group-${userGroup.group.id}`}>\n                                <div className={classes.avatarContainer}>\n                                    <Link to={`/groups/${userGroup.group.id}`}>\n                                        <img src={userGroup.group.imageUrl || '/default-group-avatar.png'} alt=\"group avatar\" className={classes.avatar}/>\n                                    </Link>\n                                </div>\n                                <div className={classes.linkContainer}>\n                                    <Link to={`/groups/${userGroup.group.id}`} className={classes.link}>\n                                        {userGroup.group.name}\n                                    </Link>\n                                    <span className={classes.roleInGroup}>{userGroup.role}</span>\n                                </div>\n                            </div>\n                        )\n                    )) : (<div>Not a member of any group.</div>)}\n                </div>\n                {/* Ссылку \"See all groups\" можно добавить, если есть отдельная страница для групп пользователя */}\n            </div>\n        </div>\n    );\n});\n\nexport default ProfilePageSideBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}