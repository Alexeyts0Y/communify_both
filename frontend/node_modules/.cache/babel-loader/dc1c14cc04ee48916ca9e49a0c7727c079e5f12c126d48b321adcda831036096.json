{"ast":null,"code":"import Main from \"./pages/Main/Main\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Register/Register\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Group from \"./pages/Group/Group\";\nimport CreatePost from \"./pages/CreatePost/CreatePost\";\nimport CreateGroup from \"./pages/CreateGroup/CreateGroup\";\nimport EditGroup from \"./pages/EditGroup/EditGroup\";\nimport EditProfilePage from \"./pages/EditProfilePage/EditProfilePage\";\nimport ChangePasswordPage from \"./pages/ChangePasswordPage/ChangePasswordPage\";\nimport FriendsPage from \"./pages/Friends/FriendsPage\"; // Переименованный Friends.jsx\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\"; // Создайте эту страницу\n\nimport { ROUTE } from \"./utils/consts\";\nexport const authRoutes = [{\n  path: ROUTE.ME,\n  Component: Profile\n}, {\n  path: ROUTE.PROFILE_EDIT,\n  Component: EditProfilePage\n}, {\n  path: ROUTE.PROFILE_CHANGE_PASSWORD,\n  Component: ChangePasswordPage\n}, {\n  path: ROUTE.POST_CREATE,\n  Component: CreatePost\n}, {\n  path: ROUTE.GROUP_CREATE,\n  Component: CreateGroup\n}, {\n  path: ROUTE.GROUP_EDIT,\n  Component: EditGroup\n},\n// :id будет из URL\n{\n  path: ROUTE.FRIENDS_MY,\n  Component: FriendsPage\n}, {\n  path: ROUTE.FRIENDS_SENT,\n  Component: FriendsPage\n}, {\n  path: ROUTE.FRIENDS_RECEIVED,\n  Component: FriendsPage\n}\n// Другие защищенные роуты\n];\nexport const publicRoutes = [{\n  path: ROUTE.FEED,\n  Component: Main\n}, {\n  path: ROUTE.RECOMMENDATIONS,\n  Component: Main\n},\n// Main будет определять, что показывать\n{\n  path: ROUTE.LOGIN,\n  Component: Login\n}, {\n  path: ROUTE.REGISTER,\n  Component: Register\n}, {\n  path: ROUTE.PROFILE,\n  Component: Profile\n},\n// :id будет из URL\n{\n  path: ROUTE.GROUP_DETAIL,\n  Component: Group\n},\n// :id будет из URL\n{\n  path: ROUTE.FRIENDS_USER,\n  Component: FriendsPage\n},\n// :id пользователя будет из URL\n{\n  path: ROUTE.NOT_FOUND,\n  Component: NotFoundPage\n}\n// Другие публичные роуты\n];","map":{"version":3,"names":["Main","Login","Register","Profile","Group","CreatePost","CreateGroup","EditGroup","EditProfilePage","ChangePasswordPage","FriendsPage","NotFoundPage","ROUTE","authRoutes","path","ME","Component","PROFILE_EDIT","PROFILE_CHANGE_PASSWORD","POST_CREATE","GROUP_CREATE","GROUP_EDIT","FRIENDS_MY","FRIENDS_SENT","FRIENDS_RECEIVED","publicRoutes","FEED","RECOMMENDATIONS","LOGIN","REGISTER","PROFILE","GROUP_DETAIL","FRIENDS_USER","NOT_FOUND"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/routes.js"],"sourcesContent":["import Main from \"./pages/Main/Main\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Register/Register\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Group from \"./pages/Group/Group\";\nimport CreatePost from \"./pages/CreatePost/CreatePost\";\nimport CreateGroup from \"./pages/CreateGroup/CreateGroup\";\nimport EditGroup from \"./pages/EditGroup/EditGroup\";\nimport EditProfilePage from \"./pages/EditProfilePage/EditProfilePage\";\nimport ChangePasswordPage from \"./pages/ChangePasswordPage/ChangePasswordPage\";\nimport FriendsPage from \"./pages/Friends/FriendsPage\"; // Переименованный Friends.jsx\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\"; // Создайте эту страницу\n\nimport { ROUTE } from \"./utils/consts\";\n\nexport const authRoutes = [\n    { path: ROUTE.ME, Component: Profile },\n    { path: ROUTE.PROFILE_EDIT, Component: EditProfilePage },\n    { path: ROUTE.PROFILE_CHANGE_PASSWORD, Component: ChangePasswordPage },\n    { path: ROUTE.POST_CREATE, Component: CreatePost },\n    { path: ROUTE.GROUP_CREATE, Component: CreateGroup },\n    { path: ROUTE.GROUP_EDIT, Component: EditGroup }, // :id будет из URL\n    { path: ROUTE.FRIENDS_MY, Component: FriendsPage },\n    { path: ROUTE.FRIENDS_SENT, Component: FriendsPage },\n    { path: ROUTE.FRIENDS_RECEIVED, Component: FriendsPage },\n    // Другие защищенные роуты\n];\n\nexport const publicRoutes = [\n    { path: ROUTE.FEED, Component: Main },\n    { path: ROUTE.RECOMMENDATIONS, Component: Main }, // Main будет определять, что показывать\n    { path: ROUTE.LOGIN, Component: Login },\n    { path: ROUTE.REGISTER, Component: Register },\n    { path: ROUTE.PROFILE, Component: Profile }, // :id будет из URL\n    { path: ROUTE.GROUP_DETAIL, Component: Group }, // :id будет из URL\n    { path: ROUTE.FRIENDS_USER, Component: FriendsPage }, // :id пользователя будет из URL\n    { path: ROUTE.NOT_FOUND, Component: NotFoundPage },\n    // Другие публичные роуты\n];"],"mappings":"AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,kBAAkB,MAAM,+CAA+C;AAC9E,OAAOC,WAAW,MAAM,6BAA6B,CAAC,CAAC;AACvD,OAAOC,YAAY,MAAM,mCAAmC,CAAC,CAAC;;AAE9D,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,UAAU,GAAG,CACtB;EAAEC,IAAI,EAAEF,KAAK,CAACG,EAAE;EAAEC,SAAS,EAAEb;AAAQ,CAAC,EACtC;EAAEW,IAAI,EAAEF,KAAK,CAACK,YAAY;EAAED,SAAS,EAAER;AAAgB,CAAC,EACxD;EAAEM,IAAI,EAAEF,KAAK,CAACM,uBAAuB;EAAEF,SAAS,EAAEP;AAAmB,CAAC,EACtE;EAAEK,IAAI,EAAEF,KAAK,CAACO,WAAW;EAAEH,SAAS,EAAEX;AAAW,CAAC,EAClD;EAAES,IAAI,EAAEF,KAAK,CAACQ,YAAY;EAAEJ,SAAS,EAAEV;AAAY,CAAC,EACpD;EAAEQ,IAAI,EAAEF,KAAK,CAACS,UAAU;EAAEL,SAAS,EAAET;AAAU,CAAC;AAAE;AAClD;EAAEO,IAAI,EAAEF,KAAK,CAACU,UAAU;EAAEN,SAAS,EAAEN;AAAY,CAAC,EAClD;EAAEI,IAAI,EAAEF,KAAK,CAACW,YAAY;EAAEP,SAAS,EAAEN;AAAY,CAAC,EACpD;EAAEI,IAAI,EAAEF,KAAK,CAACY,gBAAgB;EAAER,SAAS,EAAEN;AAAY;AACvD;AAAA,CACH;AAED,OAAO,MAAMe,YAAY,GAAG,CACxB;EAAEX,IAAI,EAAEF,KAAK,CAACc,IAAI;EAAEV,SAAS,EAAEhB;AAAK,CAAC,EACrC;EAAEc,IAAI,EAAEF,KAAK,CAACe,eAAe;EAAEX,SAAS,EAAEhB;AAAK,CAAC;AAAE;AAClD;EAAEc,IAAI,EAAEF,KAAK,CAACgB,KAAK;EAAEZ,SAAS,EAAEf;AAAM,CAAC,EACvC;EAAEa,IAAI,EAAEF,KAAK,CAACiB,QAAQ;EAAEb,SAAS,EAAEd;AAAS,CAAC,EAC7C;EAAEY,IAAI,EAAEF,KAAK,CAACkB,OAAO;EAAEd,SAAS,EAAEb;AAAQ,CAAC;AAAE;AAC7C;EAAEW,IAAI,EAAEF,KAAK,CAACmB,YAAY;EAAEf,SAAS,EAAEZ;AAAM,CAAC;AAAE;AAChD;EAAEU,IAAI,EAAEF,KAAK,CAACoB,YAAY;EAAEhB,SAAS,EAAEN;AAAY,CAAC;AAAE;AACtD;EAAEI,IAAI,EAAEF,KAAK,CAACqB,SAAS;EAAEjB,SAAS,EAAEL;AAAa;AACjD;AAAA,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}