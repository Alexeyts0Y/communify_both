{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport MainLeftSideBar from '../../component/MainLeftSideBar/MainLeftSideBar';\nimport PostContainer from '../../component/PostContainer/PostContainer';\nimport MainRightSideBar from '../../component/MainRightSideBar/MainRightSideBar';\nimport classes from './Main.module.css';\nimport { ROUTE } from '../../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    postStore,\n    friendStore,\n    groupStore\n  } = useContext(Context);\n  const location = useLocation();\n  const observer = useRef(); // Для Intersection Observer instance\n  const loadMoreTriggerRef = useRef(null); // Элемент-триггер внизу списка\n\n  useEffect(() => {\n    if (friendStore.recommendedFriends.length === 0) {\n      friendStore.fetchRecommendedFriends();\n    }\n    if (groupStore.recommendedGroups.length === 0) {\n      groupStore.fetchRecommendedGroups();\n    }\n  }, [friendStore, groupStore]); // Зависимости\n\n  // Начальная загрузка постов при смене роута или при первой загрузке\n  useEffect(() => {\n    if (location.pathname === ROUTE.RECOMMENDATIONS) {\n      // Сбрасываем и загружаем первую страницу, если постов еще нет или роут изменился\n      // `postStore.fetchRecommendedPosts(true)` позаботится о сбросе внутри себя\n      postStore.fetchRecommendedPosts(true);\n    } else if (location.pathname === ROUTE.FEED) {\n      postStore.fetchFeedPosts(true);\n    }\n    // Для других роутов (например, страница пользователя, группы) логика будет аналогичной,\n    // если там тоже нужна пагинация постов.\n\n    // Очистка при размонтировании компонента (хотя Main обычно не размонтируется)\n    // или при смене location.pathname, чтобы observer не пытался грузить для старого пути.\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [location.pathname, postStore]); // postStore добавлен для стабильности ссылки\n\n  // Callback для Intersection Observer\n  const handleObserver = useCallback(entries => {\n    const target = entries[0];\n    if (target.isIntersecting) {\n      if (location.pathname === ROUTE.RECOMMENDATIONS) {\n        if (postStore.hasMoreRec && !postStore.loadingMoreRec) {\n          console.log(\"Intersecting Recommendations, loading more...\");\n          postStore.fetchRecommendedPosts(); // Загрузка следующей страницы\n        }\n      } else if (location.pathname === ROUTE.FEED) {\n        if (postStore.hasMoreFeed && !postStore.loadingMoreFeed) {\n          console.log(\"Intersecting Feed, loading more...\");\n          postStore.fetchFeedPosts(); // Загрузка следующей страницы\n        }\n      }\n    }\n  }, [postStore, location.pathname]); // Зависимости\n\n  // Настройка Intersection Observer\n  useEffect(() => {\n    const options = {\n      root: null,\n      // viewport\n      rootMargin: '20px',\n      // Начать загрузку немного раньше, чем элемент станет виден\n      threshold: 0.1 // 10% видимости элемента\n    };\n    observer.current = new IntersectionObserver(handleObserver, options);\n    const currentTrigger = loadMoreTriggerRef.current;\n    if (currentTrigger) {\n      observer.current.observe(currentTrigger);\n    }\n    return () => {\n      if (currentTrigger && observer.current) {\n        observer.current.unobserve(currentTrigger);\n      }\n    };\n  }, [handleObserver, loadMoreTriggerRef.current]); // Пересоздаем, если изменился триггер или callback\n\n  const getCurrentPostsData = () => {\n    switch (location.pathname) {\n      case ROUTE.RECOMMENDATIONS:\n        return {\n          posts: postStore.recommendedPosts,\n          isLoadingMore: postStore.loadingMoreRec,\n          hasMoreToLoad: postStore.hasMoreRec,\n          // Начальная загрузка определяется по общему `loading` и отсутствию постов\n          isInitialLoading: postStore.loading && postStore.recommendedPosts.length === 0\n        };\n      case ROUTE.FEED:\n      default:\n        return {\n          posts: postStore.feedPosts,\n          isLoadingMore: postStore.loadingMoreFeed,\n          hasMoreToLoad: postStore.hasMoreFeed,\n          isInitialLoading: postStore.loading && postStore.feedPosts.length === 0\n        };\n    }\n  };\n  const {\n    posts,\n    isLoadingMore,\n    hasMoreToLoad,\n    isInitialLoading\n  } = getCurrentPostsData();\n  if (isInitialLoading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.mainContainer,\n      children: [/*#__PURE__*/_jsxDEV(MainLeftSideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainRightSideBar, {\n        possibleFriends: friendStore.recommendedFriends,\n        interestingGroups: groupStore.recommendedGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(MainLeftSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [posts.length > 0 ? /*#__PURE__*/_jsxDEV(PostContainer, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this) : !isLoadingMore && !hasMoreToLoad && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: \"No posts to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: loadMoreTriggerRef,\n        className: classes.loadMoreTrigger,\n        children: [isLoadingMore && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading more posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 39\n        }, this), !hasMoreToLoad && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You've reached the end.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainRightSideBar, {\n      possibleFriends: friendStore.recommendedFriends,\n      interestingGroups: groupStore.recommendedGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}, \"4WiQONO5hGsamWZLt7lcz49oDPw=\", false, function () {\n  return [useLocation];\n})), \"4WiQONO5hGsamWZLt7lcz49oDPw=\", false, function () {\n  return [useLocation];\n});\n_c2 = Main;\nexport default Main;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main$observer\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"names":["React","useContext","useEffect","useLocation","observer","Context","MainLeftSideBar","PostContainer","MainRightSideBar","classes","ROUTE","jsxDEV","_jsxDEV","Main","_s","_c","postStore","friendStore","groupStore","location","useRef","loadMoreTriggerRef","recommendedFriends","length","fetchRecommendedFriends","recommendedGroups","fetchRecommendedGroups","pathname","RECOMMENDATIONS","fetchRecommendedPosts","FEED","fetchFeedPosts","current","disconnect","handleObserver","useCallback","entries","target","isIntersecting","hasMoreRec","loadingMoreRec","console","log","hasMoreFeed","loadingMoreFeed","options","root","rootMargin","threshold","IntersectionObserver","currentTrigger","observe","unobserve","getCurrentPostsData","posts","recommendedPosts","isLoadingMore","hasMoreToLoad","isInitialLoading","loading","feedPosts","className","mainContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","container","style","textAlign","padding","possibleFriends","interestingGroups","ref","loadMoreTrigger","_c2","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../../storage';\nimport MainLeftSideBar from '../../component/MainLeftSideBar/MainLeftSideBar';\nimport PostContainer from '../../component/PostContainer/PostContainer';\nimport MainRightSideBar from '../../component/MainRightSideBar/MainRightSideBar';\nimport classes from './Main.module.css';\nimport { ROUTE } from '../../utils/consts';\n\n\nconst Main = observer(() => {\n    const { postStore, friendStore, groupStore } = useContext(Context);\n    const location = useLocation();\n\n    const observer = useRef(); // Для Intersection Observer instance\n    const loadMoreTriggerRef = useRef(null); // Элемент-триггер внизу списка\n\n    useEffect(() => {\n        if (friendStore.recommendedFriends.length === 0) {\n            friendStore.fetchRecommendedFriends();\n        }\n        if (groupStore.recommendedGroups.length === 0) {\n            groupStore.fetchRecommendedGroups();\n        }\n    }, [friendStore, groupStore]); // Зависимости\n\n    // Начальная загрузка постов при смене роута или при первой загрузке\n    useEffect(() => {\n        if (location.pathname === ROUTE.RECOMMENDATIONS) {\n            // Сбрасываем и загружаем первую страницу, если постов еще нет или роут изменился\n            // `postStore.fetchRecommendedPosts(true)` позаботится о сбросе внутри себя\n            postStore.fetchRecommendedPosts(true);\n        } else if (location.pathname === ROUTE.FEED) {\n            postStore.fetchFeedPosts(true);\n        }\n        // Для других роутов (например, страница пользователя, группы) логика будет аналогичной,\n        // если там тоже нужна пагинация постов.\n\n        // Очистка при размонтировании компонента (хотя Main обычно не размонтируется)\n        // или при смене location.pathname, чтобы observer не пытался грузить для старого пути.\n        return () => {\n            if (observer.current) {\n                observer.current.disconnect();\n            }\n        };\n    }, [location.pathname, postStore]); // postStore добавлен для стабильности ссылки\n\n    // Callback для Intersection Observer\n    const handleObserver = useCallback((entries) => {\n        const target = entries[0];\n        if (target.isIntersecting) {\n            if (location.pathname === ROUTE.RECOMMENDATIONS) {\n                if (postStore.hasMoreRec && !postStore.loadingMoreRec) {\n                    console.log(\"Intersecting Recommendations, loading more...\");\n                    postStore.fetchRecommendedPosts(); // Загрузка следующей страницы\n                }\n            } else if (location.pathname === ROUTE.FEED) {\n                if (postStore.hasMoreFeed && !postStore.loadingMoreFeed) {\n                    console.log(\"Intersecting Feed, loading more...\");\n                    postStore.fetchFeedPosts(); // Загрузка следующей страницы\n                }\n            }\n        }\n    }, [postStore, location.pathname]); // Зависимости\n\n    // Настройка Intersection Observer\n    useEffect(() => {\n        const options = {\n            root: null, // viewport\n            rootMargin: '20px', // Начать загрузку немного раньше, чем элемент станет виден\n            threshold: 0.1 // 10% видимости элемента\n        };\n\n        observer.current = new IntersectionObserver(handleObserver, options);\n\n        const currentTrigger = loadMoreTriggerRef.current;\n        if (currentTrigger) {\n            observer.current.observe(currentTrigger);\n        }\n\n        return () => {\n            if (currentTrigger && observer.current) {\n                observer.current.unobserve(currentTrigger);\n            }\n        };\n    }, [handleObserver, loadMoreTriggerRef.current]); // Пересоздаем, если изменился триггер или callback\n\n    const getCurrentPostsData = () => {\n        switch (location.pathname) {\n            case ROUTE.RECOMMENDATIONS:\n                return {\n                    posts: postStore.recommendedPosts,\n                    isLoadingMore: postStore.loadingMoreRec,\n                    hasMoreToLoad: postStore.hasMoreRec,\n                    // Начальная загрузка определяется по общему `loading` и отсутствию постов\n                    isInitialLoading: postStore.loading && postStore.recommendedPosts.length === 0\n                };\n            case ROUTE.FEED:\n            default:\n                return {\n                    posts: postStore.feedPosts,\n                    isLoadingMore: postStore.loadingMoreFeed,\n                    hasMoreToLoad: postStore.hasMoreFeed,\n                    isInitialLoading: postStore.loading && postStore.feedPosts.length === 0\n                };\n        }\n    };\n\n    const { posts, isLoadingMore, hasMoreToLoad, isInitialLoading } = getCurrentPostsData();\n\n    if (isInitialLoading) {\n        return (\n            <main className={classes.mainContainer}>\n                <MainLeftSideBar />\n                <div className={classes.container} style={{ textAlign: 'center', padding: '20px' }}>\n                    Loading posts...\n                </div>\n                <MainRightSideBar\n                    possibleFriends={friendStore.recommendedFriends}\n                    interestingGroups={groupStore.recommendedGroups}\n                />\n            </main>\n        );\n    }\n\n    return (\n        <main className={classes.mainContainer}>\n            <MainLeftSideBar />\n            <div className={classes.container}>\n                {posts.length > 0 ? (\n                    <PostContainer posts={posts} />\n                ) : (\n                    !isLoadingMore && !hasMoreToLoad && <div style={{ textAlign: 'center', padding: '20px' }}>No posts to display.</div>\n                )}\n\n                {/* Элемент-триггер для Intersection Observer */}\n                <div ref={loadMoreTriggerRef} className={classes.loadMoreTrigger}>\n                    {isLoadingMore && <p>Loading more posts...</p>}\n                    {!hasMoreToLoad && posts.length > 0 && <p>You've reached the end.</p>}\n                </div>\n            </div>\n            <MainRightSideBar \n                possibleFriends={friendStore.recommendedFriends} \n                interestingGroups={groupStore.recommendedGroups}\n            />\n        </main>\n    );\n});\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}