{"ast":null,"code":"var _jsxFileName = \"/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Button from '../../component/Button/Button';\nimport classes from './Form.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditMode = false; // Если есть ID - режим редактирования\n\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    photo: null,\n    changePhoto: false\n  });\n\n  // Загрузка данных группы при редактировании\n  useEffect(() => {\n    if (isEditMode) {\n      // Загрузка данных группы по ID\n      fetchGroupData(id).then(data => {\n        setFormData({\n          name: data.name,\n          description: data.description,\n          photo: null,\n          changePhoto: false\n        });\n      });\n    }\n  }, [id, isEditMode]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      files\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'file' ? files[0] : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEditMode) {\n      // Логика обновления группы\n      await updateGroup(id, formData);\n    } else {\n      // Логика создания группы\n      await createGroup(formData);\n    }\n    navigate(isEditMode ? `/groups/${id}` : '/groups');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: isEditMode ? 'Edit Group Information' : 'Create New Group'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: classes.form,\n      children: [isEditMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.checkboxLabel,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"changePhoto\",\n            checked: formData.changePhoto,\n            onChange: () => setFormData(prev => ({\n              ...prev,\n              changePhoto: !prev.changePhoto\n            })),\n            className: classes.checkbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), \"Change Group Photo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), formData.changePhoto && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"photo\",\n          onChange: handleChange,\n          accept: \"image/*\",\n          className: classes.fileInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), !isEditMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          children: \"Group Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"photo\",\n          onChange: handleChange,\n          accept: \"image/*\",\n          className: classes.fileInput,\n          required: !isEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          children: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          className: classes.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          className: classes.textarea,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: isEditMode ? 'Save Changes' : 'Create Group'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          white: true,\n          type: \"button\",\n          onClick: () => navigate(-1),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n// Заглушки для API функций\n_s(Form, \"U09lXOdnl740YOIette9ly3SA0I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Form;\nasync function fetchGroupData(id) {\n  // Реальная реализация будет делать запрос к API\n  return {\n    name: 'Tech Enthusiasts',\n    description: 'Group description'\n  };\n}\nasync function updateGroup(id, data) {\n  // Логика обновления группы\n}\nasync function createGroup(data) {\n  // Логика создания группы\n}\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Button","classes","jsxDEV","_jsxDEV","Form","_s","id","navigate","isEditMode","formData","setFormData","name","description","photo","changePhoto","fetchGroupData","then","data","handleChange","e","value","type","files","target","prev","handleSubmit","preventDefault","updateGroup","createGroup","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","field","checkboxLabel","checked","onChange","checkbox","accept","fileInput","label","required","input","textarea","rows","actions","white","onClick","_c","$RefreshReg$"],"sources":["/home/alexey/Documents/source/java/SocialNetwork/communify_frontend/src/pages/Form/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport Button from '../../component/Button/Button';\nimport classes from './Form.module.css';\n\nconst Form = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const isEditMode = false; // Если есть ID - режим редактирования\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        description: '',\n        photo: null,\n        changePhoto: false\n    });\n\n    // Загрузка данных группы при редактировании\n    useEffect(() => {\n        if (isEditMode) {\n            // Загрузка данных группы по ID\n            fetchGroupData(id).then(data => {\n                setFormData({\n                    name: data.name,\n                    description: data.description,\n                    photo: null,\n                    changePhoto: false\n                });\n            });\n        }\n    }, [id, isEditMode]);\n\n    const handleChange = (e) => {\n        const { name, value, type, files } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: type === 'file' ? files[0] : value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        if (isEditMode) {\n            // Логика обновления группы\n            await updateGroup(id, formData);\n        } else {\n            // Логика создания группы\n            await createGroup(formData);\n        }\n        \n        navigate(isEditMode ? `/groups/${id}` : '/groups');\n    };\n\n    return (\n        <div className={classes.container}>\n            <h1 className={classes.title}>\n                {isEditMode ? 'Edit Group Information' : 'Create New Group'}\n            </h1>\n            \n            <form onSubmit={handleSubmit} className={classes.form}>\n                {isEditMode && (\n                    <div className={classes.field}>\n                        <label className={classes.checkboxLabel}>\n                            <input \n                                type=\"checkbox\"\n                                name=\"changePhoto\"\n                                checked={formData.changePhoto}\n                                onChange={() => setFormData(prev => ({\n                                    ...prev,\n                                    changePhoto: !prev.changePhoto\n                                }))}\n                                className={classes.checkbox}\n                            />\n                            Change Group Photo\n                        </label>\n                        {formData.changePhoto && (\n                            <input \n                                type=\"file\"\n                                name=\"photo\"\n                                onChange={handleChange}\n                                accept=\"image/*\"\n                                className={classes.fileInput}\n                            />\n                        )}\n                    </div>\n                )}\n\n                {!isEditMode && (\n                    <div className={classes.field}>\n                        <label className={classes.label}>Group Photo</label>\n                        <input \n                            type=\"file\"\n                            name=\"photo\"\n                            onChange={handleChange}\n                            accept=\"image/*\"\n                            className={classes.fileInput}\n                            required={!isEditMode}\n                        />\n                    </div>\n                )}\n\n                <div className={classes.field}>\n                    <label className={classes.label}>Group Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        className={classes.input}\n                        required\n                    />\n                </div>\n\n                <div className={classes.field}>\n                    <label className={classes.label}>Description</label>\n                    <textarea\n                        name=\"description\"\n                        value={formData.description}\n                        onChange={handleChange}\n                        className={classes.textarea}\n                        rows={4}\n                    />\n                </div>\n\n                <div className={classes.actions}>\n                    <Button type=\"submit\">\n                        {isEditMode ? 'Save Changes' : 'Create Group'}\n                    </Button>\n                    <Button \n                        white \n                        type=\"button\"\n                        onClick={() => navigate(-1)}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\n// Заглушки для API функций\nasync function fetchGroupData(id) {\n    // Реальная реализация будет делать запрос к API\n    return { name: 'Tech Enthusiasts', description: 'Group description' };\n}\n\nasync function updateGroup(id, data) {\n    // Логика обновления группы\n}\n\nasync function createGroup(data) {\n    // Логика создания группы\n}\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}